"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

from core.utils import get_reverse_link

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-wg1#3os1+&-6_iyvq+nh6og(ihg#xcxvjf9x%1y-gcupe*mr4$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["time2buy.api.dizel.online", "localhost", "127.0.0.1"]
CORS_ALLOWED_ORIGINS = [
    "https://casual-store.netlify.app",
]
CORS_ALLOW_CREDENTIALS = True

# Application definition

INSTALLED_APPS = [
    'unfold',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'drf_spectacular',
    'drf_spectacular_sidecar',
    'tinymce',
    'corsheaders',

    'shop',
    'users',
    'bot',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [BASE_DIR / 'static']

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": ["rest_framework.renderers.JSONRenderer"],
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}

SPECTACULAR_SETTINGS = {
    "TITLE": "time2buy API",
    "DESCRIPTION": "OpenAPI спецификация для WebApp (категории, товары, баннеры, корзина).",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,  # чтобы не светить schema в swagger payload
    # Если планируешь токены — сразу укажи секьюрити-схемы (пример):
    "AUTHENTICATION_WHITELIST": [],
    "COMPONENT_SPLIT_REQUEST": True,
    "SCHEMA_PATH_PREFIX": r"/api",  # документировать только наши API
    "CONTACT": {"name": "time2buy team"},
}

UNFOLD = {
    "SITE_TITLE": "time2buy Admin",
    "SITE_HEADER": "time2buy — админка",
    "SITE_URL": "/admin/",
    "SITE_SYMBOL": "shopping_bag",
    "COLORS": {
        "primary": {
            "50": "#e8edfb",
            "100": "#c7d3f7",
            "200": "#a4b9f3",
            "300": "#7a96e8",
            "400": "#4f72de",
            "500": "#1d4acc",
            "600": "#173ca4",
            "700": "#122d7d",
            "800": "#0c1f55",
            "900": "#07112f",
            "950": "#030617",
        }
    },
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": True,

        "navigation": [
            {
                "title": "Пользователи",
                "separator": True,  # Top border
                "collapsible": True,  # Collapsible group of links
                "items": [
                    {
                        "title": "TG Пользователи",
                        "icon": "group",
                        "link": get_reverse_link(app_name="users", model_name="telegramuser"),
                        "permission": lambda request: request.user.is_staff or request.user.is_superuser,
                    },
                    {
                        "title": "Каналы/группы для подписки",
                        "icon": "subscriptions",
                        "link": get_reverse_link(app_name="users", model_name="subscriptionchannel"),
                        "permission": lambda request: request.user.is_staff or request.user.is_superuser,
                    },
                    {
                        "title": "Админы",
                        "icon": "shield_person",
                        "link": get_reverse_link(app_name="auth", model_name="user"),
                        "permission": lambda request: request.user.is_staff or request.user.is_superuser,
                    },
                ],
            },
            {
                "title": "Каталог",
                "separator": True,  # Top border
                "collapsible": True,  # Collapsible group of links
                "items": [
                    {
                        "title": "Категории",
                        "icon": "category",
                        "link": get_reverse_link(app_name="shop", model_name="category"),
                        "permission": lambda request: request.user.is_staff or request.user.is_superuser,
                    },
                    {
                        "title": "Товары",
                        "icon": "shopping_bag",
                        "link": get_reverse_link(app_name="shop", model_name="product"),
                        "permission": lambda request: request.user.is_staff or request.user.is_superuser,
                    },
                    {
                        "title": "Баннеры",
                        "icon": "image",
                        "link": get_reverse_link(app_name="shop", model_name="banner"),
                        "permission": lambda request: request.user.is_staff or request.user.is_superuser,
                    },
                    {
                        "title": "Инфо-страницы",
                        "icon": "info",
                        "link": get_reverse_link(app_name="shop", model_name="infopage"),
                        "permission": lambda request: request.user.is_staff or request.user.is_superuser,
                    },
                ],
            },
        ]
    }
}

TINYMCE_DEFAULT_CONFIG = {
    "menubar": False,
    "plugins": "link lists table code autoresize",
    "toolbar": (
        "undo redo | styles | bold italic underline | "
        "alignleft aligncenter alignright | bullist numlist | "
        "link table | code"
    ),
    "language": "ru",
    "content_style": "body { font-family: system-ui, -apple-system, Segoe UI, Roboto, sans-serif; }",
    "height": 700,
    "autoresize_min_height": 700,
    "autoresize_max_height": 1200,
}
